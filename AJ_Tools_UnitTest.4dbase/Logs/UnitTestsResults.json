{	"count": 19,	"countPass": 19,	"countFail": 0,	"categories": [		{			"category": "No Category",			"count": 6,			"countPass": 6,			"countFail": 0,			"descriptions": [				{					"UUID": "50E32D85ECEB4366ADFDFA5438AFB8E8",					"tests": [						{							"pass": true,							"result": "ok - Given no arguments: should raise an error",							"expected": {								"errorCode": -10518,								"errorMethod": "New AJ_Tools_UT_describe",								"errorLine": 33,								"errorFormula": "ASSERT($continue;\"You must describe your test!\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: You must describe your test!"									}								]							},							"actual": {								"errorCode": -10518,								"errorMethod": "New AJ_Tools_UT_describe",								"errorLine": 33,								"errorFormula": "ASSERT($continue;\"You must describe your test!\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: You must describe your test!"									}								]							}						},						{							"pass": true,							"result": "ok - Given one argument: should raise an error",							"expected": {								"errorCode": -10518,								"errorMethod": "New AJ_Tools_UT_describe",								"errorLine": 33,								"errorFormula": "ASSERT($continue;\"You must describe your test!\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: You must describe your test!"									}								]							},							"actual": {								"errorCode": -10518,								"errorMethod": "New AJ_Tools_UT_describe",								"errorLine": 33,								"errorFormula": "ASSERT($continue;\"You must describe your test!\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: You must describe your test!"									}								]							}						},						{							"pass": true,							"result": "ok - Given two arguments: should return a new test object",							"expected": {								"UUID": "A9D67666D7554EC99568C0E07E67E9AD",								"describe": "description",								"method": "_New AJ_Tools_UT_describe",								"assert": "[object Formula]"							},							"actual": {								"UUID": "A9D67666D7554EC99568C0E07E67E9AD",								"describe": "description",								"method": "_New AJ_Tools_UT_describe",								"assert": "[object Formula]"							}						},						{							"pass": true,							"result": "ok - Given three arguments: should return a new test object with category defined",							"expected": {								"UUID": "2E6DBC0590894CE6A08C8A50119E27F5",								"describe": "description",								"method": "_New AJ_Tools_UT_describe",								"category": "Category",								"assert": "[object Formula]"							},							"actual": {								"UUID": "2E6DBC0590894CE6A08C8A50119E27F5",								"describe": "description",								"method": "_New AJ_Tools_UT_describe",								"category": "Category",								"assert": "[object Formula]"							}						}					],					"description": "New AJ_Tools_UT_describe",					"count": 4,					"countPass": 4,					"countFail": 0,					"method": "_New AJ_Tools_UT_describe"				},				{					"UUID": "9BE5CD7CCABA4539A853A2182D366F7B",					"tests": [						{							"pass": true,							"result": "ok - Given 3+3: should return 6",							"expected": 6,							"actual": 6						},						{							"pass": true,							"result": "ok - Given a random number: should be between 0 and 32,767 (inclusive)",							"expected": true,							"actual": true						}					],					"description": "Test method executed on server",					"count": 2,					"countPass": 2,					"countFail": 0,					"method": "zz_test_cs"				}			]		},		{			"category": "AJ_Tools_UT Tests",			"count": 7,			"countPass": 7,			"countFail": 0,			"descriptions": [				{					"UUID": "B32A7F221E8045008C0595E6333C63C4",					"tests": [						{							"pass": true,							"result": "ok - Given a passed test object: should return the correct result text",							"expected": "ok - Given a passed test object: should return the correct result text",							"actual": "ok - Given a passed test object: should return the correct result text"						},						{							"pass": true,							"result": "ok - Given a failed test object: should return the correct result text",							"expected": "not ok - Given a failed test object: should return the correct result text",							"actual": "not ok - Given a failed test object: should return the correct result text"						}					],					"description": "AJ_Tools_UT_getResultText",					"count": 2,					"countPass": 2,					"countFail": 0,					"method": "_AJ_Tools_getResultText"				},				{					"UUID": "D7C323657CDF46DB9616E01279AEF293",					"tests": [						{							"pass": true,							"result": "ok - Given an empty tested object: should raise and stack 4 errors",							"expected": {								"errorCode": -10518,								"errorMethod": "AJ_Tools_UT_assert",								"errorLine": 43,								"errorFormula": "ASSERT(False;\"Expected result is missing\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Given description is missing"									},									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: What should do the test?"									},									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Actual result is missing"									},									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Expected result is missing"									}								]							},							"actual": {								"errorCode": -10518,								"errorMethod": "AJ_Tools_UT_assert",								"errorLine": 43,								"errorFormula": "ASSERT(False;\"Expected result is missing\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Given description is missing"									},									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: What should do the test?"									},									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Actual result is missing"									},									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Expected result is missing"									}								]							}						},						{							"pass": true,							"result": "ok - Given an tested object with missing given property: should raise 1 error",							"expected": {								"errorCode": -10518,								"errorMethod": "AJ_Tools_UT_assert",								"errorLine": 31,								"errorFormula": "ASSERT(False;\"Given description is missing\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Given description is missing"									}								]							},							"actual": {								"errorCode": -10518,								"errorMethod": "AJ_Tools_UT_assert",								"errorLine": 31,								"errorFormula": "ASSERT(False;\"Given description is missing\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Given description is missing"									}								]							}						},						{							"pass": true,							"result": "ok - Given an tested object with missing should property: should raise 1 error",							"expected": {								"errorCode": -10518,								"errorMethod": "AJ_Tools_UT_assert",								"errorLine": 35,								"errorFormula": "ASSERT(False;\"What should do the test?\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: What should do the test?"									}								]							},							"actual": {								"errorCode": -10518,								"errorMethod": "AJ_Tools_UT_assert",								"errorLine": 35,								"errorFormula": "ASSERT(False;\"What should do the test?\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: What should do the test?"									}								]							}						},						{							"pass": true,							"result": "ok - Given an tested object with missing expected property: should raise 1 error",							"expected": {								"errorCode": -10518,								"errorMethod": "AJ_Tools_UT_assert",								"errorLine": 43,								"errorFormula": "ASSERT(False;\"Expected result is missing\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Expected result is missing"									}								]							},							"actual": {								"errorCode": -10518,								"errorMethod": "AJ_Tools_UT_assert",								"errorLine": 43,								"errorFormula": "ASSERT(False;\"Expected result is missing\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Expected result is missing"									}								]							}						},						{							"pass": true,							"result": "ok - Given an tested object with missing actual property: should raise 1 error",							"expected": {								"errorCode": -10518,								"errorMethod": "AJ_Tools_UT_assert",								"errorLine": 39,								"errorFormula": "ASSERT(False;\"Actual result is missing\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Actual result is missing"									}								]							},							"actual": {								"errorCode": -10518,								"errorMethod": "AJ_Tools_UT_assert",								"errorLine": 39,								"errorFormula": "ASSERT(False;\"Actual result is missing\")",								"stack": [									{										"code": -10518,										"comp": "4DRT",										"text": "Assert failed: Actual result is missing"									}								]							}						}					],					"description": "AJ_Tools_UT_assert",					"count": 5,					"countPass": 5,					"countFail": 0,					"method": "_AJ_Tools_UT_assert"				}			]		},		{			"category": "Math",			"count": 6,			"countPass": 6,			"countFail": 0,			"descriptions": [				{					"UUID": "004A3A03686C4AC49F42A235B9BBD0C1",					"tests": [						{							"pass": true,							"result": "ok - Given no parameters: should return 0",							"expected": 0,							"actual": 0						},						{							"pass": true,							"result": "ok - Given 1 parameter (here 5): should return 10 (addition itself)",							"expected": 10,							"actual": 10						},						{							"pass": true,							"result": "ok - Given 3 and 3: should return 6",							"expected": 6,							"actual": 6						},						{							"pass": true,							"result": "ok - Given 1 and 3: should return 4",							"expected": 4,							"actual": 4						}					],					"description": "Sum()",					"count": 4,					"countPass": 4,					"countFail": 0,					"method": "zz_test"				},				{					"UUID": "23682F5ECD7148198CF03A98CF39B8EA",					"tests": [						{							"pass": true,							"result": "ok - Given an object with some properties: should be like another object with same properties in a different order (Deep equal)",							"expected": {								"B": "b",								"A": "A",								"c": {									"c": "c"								},								"col": [									1,									2,									3								]							},							"actual": {								"A": "A",								"col": [									1,									2,									3								],								"c": {									"c": "c"								},								"B": "b"							}						},						{							"pass": true,							"result": "ok - Given an object with some properties: should be like another object with same properties in a different order (Deep equal)",							"expected": {								"B": "b",								"A": "A",								"c": {									"c": "c"								}							},							"actual": {								"A": "A",								"c": {									"c": "c"								},								"B": "b"							}						}					],					"description": "Test object comparaison if properties are not in the same order",					"count": 2,					"countPass": 2,					"countFail": 0,					"method": "zz_test2"				}			]		}	],	"result": true,	"lastTestDate": "August 27, 2019 - 14:37"}